"""Initial schema with all tables

Revision ID: 298941651329
Revises: 
Create Date: 2025-07-16 13:02:43.034007

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '298941651329'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building_external_ids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('source_site', sa.String(length=50), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_site', 'external_id', name='_site_external_id_uc')
    )
    op.create_index('idx_building_external_ids_source_external', 'building_external_ids', ['source_site', 'external_id'], unique=False)
    op.create_index(op.f('ix_building_external_ids_id'), 'building_external_ids', ['id'], unique=False)
    op.drop_index(op.f('idx_properties_building_hash'), table_name='properties')
    op.drop_index(op.f('idx_properties_price'), table_name='properties')
    op.drop_index(op.f('idx_properties_source'), table_name='properties')
    op.drop_table('properties')
    op.drop_index(op.f('idx_price_history_property_id'), table_name='price_history')
    op.drop_table('price_history')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('price_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('property_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_recorded', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('price_history_property_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('price_history_pkey'))
    )
    op.create_index(op.f('idx_price_history_property_id'), 'price_history', ['property_id'], unique=False)
    op.create_table('properties',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('site_property_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('building_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('room_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('area', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('layout', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('station_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('floor_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_floors', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('direction', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('property_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('building_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_scraped_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('properties_pkey')),
    sa.UniqueConstraint('property_hash', name=op.f('properties_property_hash_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('idx_properties_source'), 'properties', ['source'], unique=False)
    op.create_index(op.f('idx_properties_price'), 'properties', ['price'], unique=False)
    op.create_index(op.f('idx_properties_building_hash'), 'properties', ['building_hash'], unique=False)
    op.drop_index(op.f('ix_building_external_ids_id'), table_name='building_external_ids')
    op.drop_index('idx_building_external_ids_source_external', table_name='building_external_ids')
    op.drop_table('building_external_ids')
    # ### end Alembic commands ###
